{"version":3,"sources":["../../../../projects/gustavguez/ngx-core/src/lib/status.enum.ts","../../../../projects/gustavguez/ngx-core/src/lib/forms/ngx-gustavguez-button/ngx-gustavguez-button.component.ts","../../../../projects/gustavguez/ngx-core/src/lib/forms/ngx-gustavguez-input/ngx-gustavguez-input.component.ts","../../../../projects/gustavguez/ngx-core/src/lib/forms/ngx-gustavguez-input-holder/ngx-gustavguez-input-holder.component.ts","../../../../projects/gustavguez/ngx-core/src/lib/forms/ngx-gustavguez-select/ngx-gustavguez-select.component.ts","../../../../projects/gustavguez/ngx-core/src/lib/forms/ngx-gustavguez-submit/ngx-gustavguez-submit.component.ts","../../../../projects/gustavguez/ngx-core/src/lib/forms/ngx-gustavguez-tags/ngx-gustavguez-tags.component.ts","../../../../projects/gustavguez/ngx-core/src/lib/forms/ngx-gustavguez-textarea/ngx-gustavguez-textarea.component.ts","../../../../projects/gustavguez/ngx-core/src/lib/layout/ngx-gustavguez-main-sidebar/main-sidebar.service.ts","../../../../projects/gustavguez/ngx-core/src/lib/layout/ngx-gustavguez-main-container/ngx-gustavguez-main-container.directive.ts","../../../../projects/gustavguez/ngx-core/src/lib/utilities/array.utility.ts","../../../../projects/gustavguez/ngx-core/src/lib/layout/ngx-gustavguez-main-sidebar/ngx-gustavguez-main-sidebar.component.ts","../../../../projects/gustavguez/ngx-core/src/lib/layout/ngx-gustavguez-nav/ngx-gustavguez-nav.component.ts","../../../../projects/gustavguez/ngx-core/src/lib/layout/ngx-gustavguez-nav-item/ngx-gustavguez-nav-item.component.ts","../../../../projects/gustavguez/ngx-core/src/lib/utilities/date.utility.ts","../../../../projects/gustavguez/ngx-core/src/lib/pipes/ngx-gustavguez-pretty-date/ngx-gustavguez-pretty-date.pipe.ts","../../../../projects/gustavguez/ngx-core/src/lib/pipes/ngx-gustavguez-pretty-hour/ngx-gustavguez-pretty-hour.pipe.ts","../../../../projects/gustavguez/ngx-core/src/lib/utilities/number.utility.ts","../../../../projects/gustavguez/ngx-core/src/lib/pipes/ngx-gustavguez-pretty-number/ngx-gustavguez-pretty-number.pipe.ts","../../../../projects/gustavguez/ngx-core/src/lib/structure/ngx-gustavguez-card/ngx-gustavguez-card.component.ts","../../../../projects/gustavguez/ngx-core/src/lib/structure/ngx-gustavguez-info-box/ngx-gustavguez-info-box.component.ts","../../../../projects/gustavguez/ngx-core/src/lib/structure/ngx-gustavguez-loader/ngx-gustavguez-loader.component.ts","../../../../projects/gustavguez/ngx-core/src/lib/structure/ngx-gustavguez-page-header/ngx-gustavguez-page-header.component.ts","../../../../projects/gustavguez/ngx-core/src/lib/structure/ngx-gustavguez-popup/ngx-gustavguez-popup.component.ts","../../../../projects/gustavguez/ngx-core/src/lib/structure/ngx-gustavguez-table/table-action.argument.ts","../../../../projects/gustavguez/ngx-core/src/lib/structure/ngx-gustavguez-table/ngx-gustavguez-table.component.ts","../../../../projects/gustavguez/ngx-core/src/lib/utilities/string.utility.ts","../../../../projects/gustavguez/ngx-core/src/lib/structure/ngx-gustavguez-toasts/toast.model.ts","../../../../projects/gustavguez/ngx-core/src/lib/structure/ngx-gustavguez-toasts/toasts.service.ts","../../../../projects/gustavguez/ngx-core/src/lib/structure/ngx-gustavguez-toasts/ngx-gustavguez-toasts.component.ts","../../../../projects/gustavguez/ngx-core/src/lib/ngx-gustavguez-core.module.ts","../../../../projects/gustavguez/ngx-core/src/lib/api/api-response-strategies/api-root-response-strategy.model.ts","../../../../projects/gustavguez/ngx-core/src/lib/api/api-response-strategies/api-data-response-strategy.model.ts","../../../../projects/gustavguez/ngx-core/src/lib/api/api-response.model.ts","../../../../projects/gustavguez/ngx-core/src/lib/utilities/form.utility.ts","../../../../projects/gustavguez/ngx-core/src/lib/api/api.service.ts","../../../../projects/gustavguez/ngx-core/src/lib/utilities/window.utility.ts","../../../../projects/gustavguez/ngx-core/src/lib/layout/ngx-gustavguez-nav-item/nav-item.model.ts","../../../../projects/gustavguez/ngx-core/src/lib/structure/ngx-gustavguez-table/table-header.model.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../projects/gustavguez/ngx-core/src/lib/structure/ngx-gustavguez-table/table-action.model.ts","../../../../projects/gustavguez/ngx-core/src/lib/structure/ngx-gustavguez-table/actions/table-show-action.model.ts","../../../../projects/gustavguez/ngx-core/src/lib/structure/ngx-gustavguez-table/table-options.model.ts"],"names":["StatusEnum","NgxGustavguezButtonComponent","this","onClick","EventEmitter","prototype","onDoClick","emit","Component","args","selector","template","Input","Output","NgxGustavguezInputComponent","onChange","onEmitChange","form","get","controlName","value","host","class","NgxGustavguezSelectComponent","NgxGustavguezSubmitComponent","NgxGustavguezTagsComponent","onSelect","onEmitSelect","option","NgxGustavguezTextareaComponent","MainSidebarService","onChangeState","onToggleState","changeState","state","toggleState","Injectable","providedIn","NgxGustavguezMainContainerDirective","mainSidebarService","classes","ngOnInit","_this","loadHostClasses","subscribe","indexClassCollapse","indexOf","indexClassOpen","push","splice","hostClasses","join","Directive","HostBinding","ArrayUtility","find","items","id","callback","compareKey","key","Array","found_1","every","item","index","each","forEach","getDisplayKeys","idKey","displayKey","displayKeys","obj","getSelectedKeys","selected","val","filter","result","map","sort","itemA","itemB","hasValue","length","NgxGustavguezMainSidebarComponent","onBrandLink","menuItemsStates","onMenuItemClick","menuItem","childs","onBrandLinkClick","event","preventDefault","onCloseSidebar","NgxGustavguezNavComponent","onLogout","onBrand","onToggleMenu","onToggleUserMenu","userMenuState","onLogoutClick","NgxGustavguezNavItemComponent","onNavItem","onNavItemClick","navItem","onNavItemChild","child","moment","momentImported","DateUtility","todayLocaleString","today","localeString","todayDateString","format","date","todayAsPrettyString","prettyDate","displayHour","str","prettyHour","NgxGustavguezPrettyDatePipe","transform","_i","arguments","Pipe","name","NgxGustavguezPrettyHourPipe","NumberUtility","valStr","toFixed","replace","substring","valid","isNaN","Number","NgxGustavguezPrettyNumberPipe","NgxGustavguezPopupComponent","onClose","onClosePopup","action","model","NgxGustavguezTableComponent","onAction","onActionClick","TableActionArgument","StringUtility","randomString","Math","random","toString","padLeft","digits","padStart","message","status","ToastsService","onToastAdded","addError","ToastModel","DANGER","addSuccess","SUCCESS","NgxGustavguezToastsComponent","toastsService","toasts","toast","openToast","onCloseToast","closeToast","timerInstance","setTimeout","unshift","toastFound","clearTimeout","NgModule","declarations","NgxGustavguezInputHolderComponent","NgxGustavguezCardComponent","NgxGustavguezInfoBoxComponent","NgxGustavguezLoaderComponent","NgxGustavguezPageHeaderComponent","imports","CommonModule","RouterModule","ReactiveFormsModule","exports","ApiRootResponseStrategyModel","getName","parseJSON","json","data","ApiDataResponseStrategyModel","ApiResponseModel","hasSingreResult","hasCollectionResult","FormUtility","jsonToFormData","fd","FormData","jsonChild","append","needFormData","need","File","Blob","validateAllFormFields","formGroup","Object","keys","controls","field","control","FormControl","markAsTouched","onlySelf","FormGroup","ApiService","httpClient","apiResponseStrategies","activeApiResponseStrategy","setApiURL","apiURL","setAccessToken","accessToken","addApiResponseStrategy","strategy","changeApiResponseStrategy","strategyName","hasChanged","previousApiResponseStrategy","restoreApiResponseStrategy","undefined","fetchData","uri","params","httpOptions","headers","HttpHeaders","Authorization","pipe","response","parseResponse","getObj","partialUpdateObj","url","patch","deleteObj","delete","createObj","post","resp","HttpClient","WindowUtility","isSmallScreen","window","innerWidth","isNotSmallScreen","display","icon","isLink","extendStatics","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","create","TableActionModel","text","mustDisplayCallback","PRIMARY","mustDisplay","Function","TableShowActionModel","_super","call","__","constructor","__extends","fields","actions"],"mappings":"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","sourcesContent":["export enum StatusEnum {\n\tPRIMARY = 'primary',\n\tSECONDARY = 'secondary',\n\tSUCCESS = 'success',\n\tDANGER = 'danger',\n\tWARNING = 'warning',\n\tINFO = 'info',\n\tLIGHT = 'light',\n\tDARK = 'dark'\n}\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\n\nimport { StatusEnum } from '../../status.enum';\n\n@Component({\n\tselector: 'ngx-gustavguez-button',\n\ttemplateUrl: './ngx-gustavguez-button.component.html',\n\tstyleUrls: ['./ngx-gustavguez-button.component.scss']\n})\nexport class NgxGustavguezButtonComponent {\n\t// Input\n\t@Input() text: string;\n\t@Input() loadingText: string;\n\t@Input() loading: string;\n\t@Input() status: StatusEnum;\n\n\t// Output\n\t@Output() onClick: EventEmitter<void> = new EventEmitter();\n\n\t// Custom events\n\tonDoClick(): void {\n\t\tthis.onClick.emit();\n\t}\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n\tselector: 'ngx-gustavguez-input',\n\ttemplateUrl: './ngx-gustavguez-input.component.html',\n\tstyleUrls: ['./ngx-gustavguez-input.component.scss']\n})\nexport class NgxGustavguezInputComponent {\n\t// Inputs\n\t@Input() form: FormGroup;\n\t@Input() label: string;\n\t@Input() placeholder: string;\n\t@Input() controlId: string;\n\t@Input() controlName: string;\n\t@Input() type: string;\n\t@Input() requiredErrorText: string;\n\n\t// Outputs\n\t@Output() onChange: EventEmitter<any> = new EventEmitter();\n\n\t// Custom events\n\tonEmitChange(): void {\n\t\tthis.onChange.emit(\n\t\t\tthis.form.get(this.controlName).value\n\t\t);\n\t}\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n\tselector: 'ngx-gustavguez-input-holder',\n\ttemplateUrl: './ngx-gustavguez-input-holder.component.html',\n\tstyleUrls: ['./ngx-gustavguez-input-holder.component.scss'],\n\thost: { class: 'w-100' }\n})\nexport class NgxGustavguezInputHolderComponent {\n\t// Inputs\n\t@Input() form: FormGroup;\n\t@Input() controlName: string;\n\t@Input() requiredErrorText: string;\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n\tselector: 'ngx-gustavguez-select',\n\ttemplateUrl: './ngx-gustavguez-select.component.html',\n\tstyleUrls: ['./ngx-gustavguez-select.component.scss']\n})\nexport class NgxGustavguezSelectComponent {\n\t// Inputs\n\t@Input() form: FormGroup;\n\t@Input() label: string;\n\t@Input() controlId: string;\n\t@Input() controlName: string;\n\t@Input() requiredErrorText: string;\n\n\t@Input() options: string;\n\t@Input() placeholder: string;\n\t@Input() optionId: string;\n\t@Input() optionLabel: string;\n\n\t// Outputs\n\t@Output() onChange: EventEmitter<any> = new EventEmitter();\n\n\t// Custom events\n\tonEmitChange(): void {\n\t\tthis.onChange.emit(\n\t\t\tthis.form.get(this.controlName).value\n\t\t);\n\t}\n}\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\n\nimport { StatusEnum } from '../../status.enum';\n\n@Component({\n\tselector: 'ngx-gustavguez-submit',\n\ttemplateUrl: './ngx-gustavguez-submit.component.html',\n\tstyleUrls: ['./ngx-gustavguez-submit.component.scss']\n})\nexport class NgxGustavguezSubmitComponent {\n\t// Input\n\t@Input() text: string;\n\t@Input() loadingText: string;\n\t@Input() loading: string;\n\t@Input() status: StatusEnum;\n\n\t// Output\n\t@Output() onClick: EventEmitter<void> = new EventEmitter();\n\n\t// Custom events\n\tonDoClick(): void {\n\t\tthis.onClick.emit();\n\t}\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n\tselector: 'ngx-gustavguez-tags',\n\ttemplateUrl: './ngx-gustavguez-tags.component.html',\n\tstyleUrls: ['./ngx-gustavguez-tags.component.scss']\n})\nexport class NgxGustavguezTagsComponent {\n\t// Inputs\n\t@Input() options: string;\n\t@Input() optionLabel: string;\n\n\t// Outputs\n\t@Output() onSelect: EventEmitter<any> = new EventEmitter();\n\n\t// Custom events\n\tonEmitSelect(option: any): void {\n\t\tthis.onSelect.emit(option);\n\t}\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n\tselector: 'ngx-gustavguez-textarea',\n\ttemplateUrl: './ngx-gustavguez-textarea.component.html',\n\tstyleUrls: ['./ngx-gustavguez-textarea.component.scss']\n})\nexport class NgxGustavguezTextareaComponent {\n\t// Inputs\n\t@Input() form: FormGroup;\n\t@Input() label: string;\n\t@Input() placeholder: string;\n\t@Input() controlId: string;\n\t@Input() controlName: string;\n\t@Input() requiredErrorText: string;\n\n\t// Outputs\n\t@Output() onChange: EventEmitter<any> = new EventEmitter();\n\n\t// Custom events\n\tonEmitChange(): void {\n\t\tthis.onChange.emit(\n\t\t\tthis.form.get(this.controlName).value\n\t\t);\n\t}\n}\n","import { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class MainSidebarService {\n\n\t// Properties\n\tpublic onChangeState: EventEmitter<boolean> = new EventEmitter();\n\tpublic onToggleState: EventEmitter<void> = new EventEmitter();\n\n\t// Public methods\n\tpublic changeState(state: boolean): void {\n\t\tthis.onChangeState.emit(state);\n\t}\n\n\tpublic toggleState(): void {\n\t\tthis.onToggleState.emit();\n\t}\n\n}\n","import { Directive, HostBinding, OnInit } from '@angular/core';\n\nimport { MainSidebarService } from '../ngx-gustavguez-main-sidebar/main-sidebar.service';\n\n@Directive({\n\tselector: '[ngxGustavguezMainContainer]'\n})\nexport class NgxGustavguezMainContainerDirective implements OnInit {\n\t// Host binding\n\t@HostBinding('class') hostClasses: string;\n\n\t// Modes\n\tclasses: string[] = [\n\t\t'sidebar-mini',\n\t\t'layout-fixed',\n\t\t'layout-navbar-fixed'\n\t];\n\tstate: boolean;\n\n\t// Inject services\n\tconstructor(\n\t\tprivate mainSidebarService: MainSidebarService) { }\n\n\t// On component init\n\tngOnInit(): void {\n\t\t// Set base classes to host classes\n\t\tthis.loadHostClasses(false);\n\n\t\t// Watch sidebarState change\n\t\tthis.mainSidebarService.onChangeState.subscribe((state: boolean) => {\n\t\t\tthis.loadHostClasses(state);\n\t\t});\n\t\tthis.mainSidebarService.onToggleState.subscribe(() => {\n\t\t\tthis.loadHostClasses(!this.state);\n\t\t});\n\t}\n\n\t// Private helper methods\n\tprivate loadHostClasses(state: boolean): void {\n\t\t// Control index just for control\n\t\tconst indexClassCollapse: number = this.classes.indexOf('sidebar-collapse');\n\t\tconst indexClassOpen: number = this.classes.indexOf('sidebar-open');\n\n\t\t// Load state\n\t\tthis.state = state;\n\n\t\t// Check state\n\t\tif (state) {\n\t\t\tthis.classes.push('sidebar-open');\n\t\t\tthis.classes.push('sidebar-collapse');\n\t\t} else {\n\t\t\tif (indexClassCollapse > -1) {\n\t\t\t\tthis.classes.splice(indexClassCollapse, 1);\n\t\t\t}\n\t\t\tif (indexClassOpen > -1) {\n\t\t\t\tthis.classes.splice(indexClassOpen, 1);\n\t\t\t}\n\t\t}\n\n\t\t// Load classes\n\t\tthis.hostClasses = this.classes.join(' ');\n\t}\n\n}\n","export class ArrayUtility {\n\n\t// Suggest current timezone hours\n\tstatic find(items: any[], id: any, callback: (item: any, index?: any) => void, compareKey?: string): void {\n\t\t// Check id key\n\t\tconst key: string = compareKey ? compareKey : 'id';\n\n\t\t// Check items\n\t\tif (items instanceof Array) {\n\t\t\tlet found: boolean = false;\n\n\t\t\t// Found it\n\t\t\titems.every((item: any, index: number) => {\n\t\t\t\tfound = item[key] === id;\n\n\t\t\t\tif (found) {\n\t\t\t\t\tcallback(item, index);\n\t\t\t\t}\n\t\t\t\treturn !found;\n\t\t\t});\n\t\t}\n\t}\n\n\tstatic each(items: any, callback: (item: any, index?: any) => void): void {\n\t\t// Array\n\t\tif (items instanceof Array) {\n\t\t\titems.forEach((item: any, index: number) => {\n\t\t\t\tcallback(item, index);\n\t\t\t});\n\t\t} else if (items && typeof items === 'object') {\n\t\t\t// Object\n\t\t\tfor (const index in items) {\n\t\t\t\tcallback(items[index], index);\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic every(items: any[], callback: (item: any, index?: any) => boolean): void {\n\t\tif (items instanceof Array) {\n\t\t\titems.every((item: any, index: number) => callback(item, index));\n\t\t}\n\t}\n\n\tstatic getDisplayKeys(items: any[], idKey?: string, displayKey?: string): any {\n\t\tconst displayKeys: any = {};\n\n\t\t// Default keys\n\t\tidKey = idKey ? idKey : 'id';\n\t\tdisplayKey = displayKey ? displayKey : 'name';\n\n\t\t// Each\n\t\tArrayUtility.each(items, (obj: any) => {\n\t\t\tdisplayKeys[obj[idKey]] = obj[displayKey];\n\t\t});\n\t\treturn displayKeys;\n\t}\n\n\tstatic getSelectedKeys(items: []): any[] {\n\t\tconst selected: any[] = [];\n\n\t\t// Iterate\n\t\tArrayUtility.each(items, (val: boolean, key: any) => {\n\t\t\tif (val) {\n\t\t\t\tselected.push(key);\n\t\t\t}\n\t\t});\n\t\treturn selected;\n\t}\n\n\tstatic filter(items: any[], callback: (item: any, index?: any) => any): any[] {\n\t\tlet result: any[] = [];\n\t\tif (items instanceof Array) {\n\t\t\tresult = items.filter((item: any, index: number) => callback(item, index));\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic map(items: any[], callback: (item: any, index?: any) => any): any[] {\n\t\tlet result: any[] = [];\n\t\tif (items instanceof Array) {\n\t\t\tresult = items.map((item: any, index: number) => callback(item, index));\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic sort(items: any[], compareKey: string): any[] {\n\t\tconst result: any[] = items.sort((itemA: any, itemB: any) => {\n\t\t\tif (itemA[compareKey] < itemB[compareKey]) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (itemA[compareKey] > itemB[compareKey]) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\t\treturn result;\n\t}\n\n\tstatic hasValue(items: any[]): boolean {\n\t\treturn items instanceof Array && items.length > 0;\n\t}\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { ArrayUtility } from '../../utilities/array.utility';\nimport { MainSidebarService } from './main-sidebar.service';\nimport { NavItemModel } from '../ngx-gustavguez-nav-item/nav-item.model';\n\n@Component({\n\tselector: 'ngx-gustavguez-main-sidebar',\n\ttemplateUrl: './ngx-gustavguez-main-sidebar.component.html',\n\tstyleUrls: ['./ngx-gustavguez-main-sidebar.component.scss']\n})\nexport class NgxGustavguezMainSidebarComponent implements OnInit {\n\t// Inputs\n\t@Input() brandTitle: string;\n\t@Input() brandImg: string;\n\t@Input() userIsLogged: boolean;\n\t@Input() userAvatar: string;\n\t@Input() userName: string;\n\t@Input() menuItems: NavItemModel[];\n\n\t// Outputs\n\t@Output() onBrandLink: EventEmitter<void> = new EventEmitter();\n\n\t// Models\n\tmenuItemsStates: any;\n\n\t// Inject services\n\tconstructor(\n\t\tprivate mainSidebarService: MainSidebarService\n\t) { }\n\n\t// On component init\n\tngOnInit(): void {\n\t\t// Init vars\n\t\tthis.menuItemsStates = {};\n\t}\n\n\t// Custom events\n\tonMenuItemClick(menuItem: NavItemModel): void {\n\t\t// Check\n\t\tif (ArrayUtility.hasValue(menuItem.childs)) {\n\t\t\t// Toggle state\n\t\t\tthis.menuItemsStates[menuItem.id] = menuItem.id in this.menuItemsStates ? !this.menuItemsStates[menuItem.id] : false;\n\t\t} else {\n\t\t\t// Close sidebar\n\t\t\tthis.mainSidebarService.changeState(false);\n\t\t}\n\t}\n\n\tonBrandLinkClick(event: MouseEvent): void {\n\t\tevent.preventDefault();\n\n\t\t// Close sidebar\n\t\tthis.mainSidebarService.changeState(false);\n\n\t\t// Event emitter\n\t\tthis.onBrandLink.emit();\n\t}\n\n\tonCloseSidebar(): void {\n\t\tthis.mainSidebarService.changeState(false);\n\t}\n\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MainSidebarService } from '../ngx-gustavguez-main-sidebar/main-sidebar.service';\n\n@Component({\n\tselector: 'ngx-gustavguez-nav',\n\ttemplateUrl: './ngx-gustavguez-nav.component.html',\n\tstyleUrls: ['./ngx-gustavguez-nav.component.scss']\n})\nexport class NgxGustavguezNavComponent {\n\t// Inputs\n\t@Input() brandTitle: string;\n\t@Input() userIsLogged: boolean;\n\t@Input() userMenuText: string;\n\t@Input() userMenuLogoutText: string;\n\n\t// Outputs\n\t@Output() onLogout: EventEmitter<void> = new EventEmitter();\n\t@Output() onBrand: EventEmitter<void> = new EventEmitter();\n\n\t// Models\n\tuserMenuState: boolean;\n\n\t// Inject services\n\tconstructor(\n\t\tprivate mainSidebarService: MainSidebarService) { }\n\n\t// Custom events\n\tonToggleMenu(event: MouseEvent): void {\n\t\tevent.preventDefault();\n\t\tthis.mainSidebarService.toggleState();\n\t}\n\n\tonToggleUserMenu(event: MouseEvent): void {\n\t\tevent.preventDefault();\n\t\tthis.userMenuState = !this.userMenuState;\n\t}\n\n\tonLogoutClick(event: MouseEvent): void {\n\t\tevent.preventDefault();\n\t\t// Emit logout\n\t\tthis.onLogout.emit();\n\n\t\t// Close user menu\n\t\tthis.userMenuState = false;\n\t}\n\n\tonBrandLink(event: MouseEvent): void {\n\t\tevent.preventDefault();\n\t\tthis.onBrand.emit();\n\t}\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { NavItemModel } from './nav-item.model';\n\n@Component({\n\tselector: '[ngxGustavguezNavItem]',\n\ttemplateUrl: './ngx-gustavguez-nav-item.component.html',\n\tstyleUrls: ['./ngx-gustavguez-nav-item.component.scss']\n})\nexport class NgxGustavguezNavItemComponent {\n\t// Inputs\n\t@Input() navItem: NavItemModel;\n\t@Input() isParent: boolean;\n\t@Input() state: boolean;\n\n\t@Output() onNavItem: EventEmitter<NavItemModel> = new EventEmitter();\n\n\t// Custome events\n\tonNavItemClick(event: MouseEvent): void {\n\t\tevent.preventDefault();\n\t\tthis.onNavItem.emit(this.navItem);\n\t}\n\n\tonNavItemChild(child: NavItemModel): void {\n\t\tthis.onNavItem.emit(child);\n\t}\n}\n","import * as momentImported from 'moment';\n\nconst moment = momentImported;\n\nexport class DateUtility {\n\n\tstatic todayLocaleString(): string {\n\t\tconst today: any = moment();\n\t\treturn DateUtility.localeString(today);\n\t}\n\n\tstatic todayDateString(): string {\n\t\tconst today: any = moment();\n\t\treturn today.format('YYYY-MM-DD');\n\t}\n\n\tstatic localeString(date: any): string {\n\t\treturn date.format('YYYY-MM-DD') + 'T' + date.format('HH:mm');\n\t}\n\n\tstatic todayAsPrettyString(): string {\n\t\tconst today: any = moment();\n\t\treturn today.format('DD/MM/YYYY');\n\t}\n\n\tstatic prettyDate(date: string, displayHour?: boolean): string {\n\t\tconst momentDate: any = moment(date);\n\t\tlet str: string = momentDate.format('DD/MM/YYYY');\n\n\t\tif (displayHour) {\n\t\t\tstr += ' ' + DateUtility.prettyHour(date);\n\t\t}\n\t\treturn str;\n\t}\n\n\tstatic prettyHour(date: string): string {\n\t\tconst momentDate: any = moment(date);\n\t\treturn momentDate.format('HH:mm');\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { DateUtility } from '../../utilities/date.utility';\n\n@Pipe({\n\tname: 'ngxGustavguezPrettyDate'\n})\nexport class NgxGustavguezPrettyDatePipe implements PipeTransform {\n\n\ttransform(value: any, ...args: any[]): any {\n\t\treturn DateUtility.prettyDate(value, args.length ? args[0] : true);\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { DateUtility } from '../../utilities/date.utility';\n\n@Pipe({\n\tname: 'ngxGustavguezPrettyHour'\n})\nexport class NgxGustavguezPrettyHourPipe implements PipeTransform {\n\n\ttransform(value: any): any {\n\t\treturn DateUtility.prettyHour(value);\n\t}\n\n}\n","export class NumberUtility {\n\n\tstatic format(val: number): string {\n\t\tconst valStr: string = val.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n\t\treturn valStr.substring(0, valStr.length - 3);\n\t}\n\n\tstatic valid(val: number): boolean {\n\t\treturn !isNaN(Number(val));\n\t}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { NumberUtility } from '../../utilities/number.utility';\n\n@Pipe({\n\tname: 'ngxGustavguezPrettyNumber'\n})\nexport class NgxGustavguezPrettyNumberPipe implements PipeTransform {\n\n\ttransform(value: any): any {\n\t\treturn NumberUtility.valid(value) ? NumberUtility.format(value) : '0';\n\t}\n\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: 'ngx-gustavguez-card',\n\ttemplateUrl: './ngx-gustavguez-card.component.html',\n\tstyleUrls: ['./ngx-gustavguez-card.component.scss']\n})\nexport class NgxGustavguezCardComponent {\n\t// Inputs\n\t@Input() title: string;\n}\n","import { Component, Input } from '@angular/core';\nimport { StatusEnum } from '../../status.enum';\n\n@Component({\n\tselector: 'ngx-gustavguez-info-box',\n\ttemplateUrl: './ngx-gustavguez-info-box.component.html',\n\tstyleUrls: ['./ngx-gustavguez-info-box.component.scss']\n})\nexport class NgxGustavguezInfoBoxComponent {\n\t// Inputs\n\t@Input() text: string;\n\t@Input() number: string;\n\t@Input() status: StatusEnum;\n\t@Input() icon: string;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: 'ngx-gustavguez-loader',\n\ttemplateUrl: './ngx-gustavguez-loader.component.html',\n\tstyleUrls: ['./ngx-gustavguez-loader.component.scss']\n})\nexport class NgxGustavguezLoaderComponent {\n\t// Inputs\n\t@Input() loading: boolean;\n\t@Input() loadingText: string;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: 'ngx-gustavguez-page-header',\n\ttemplateUrl: './ngx-gustavguez-page-header.component.html',\n\tstyleUrls: ['./ngx-gustavguez-page-header.component.scss']\n})\nexport class NgxGustavguezPageHeaderComponent {\n\t// Inputs\n\t@Input() text: string;\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n\tselector: 'ngx-gustavguez-popup',\n\ttemplateUrl: './ngx-gustavguez-popup.component.html',\n\tstyleUrls: ['./ngx-gustavguez-popup.component.scss']\n})\nexport class NgxGustavguezPopupComponent {\n\t// Inputs and Outputs\n\t@Input() state: boolean;\n\t@Input() titleText: string;\n\t@Input() closeText: string;\n\t@Output() onClose: EventEmitter<void> = new EventEmitter();\n\n\t// Custome events\n\tonClosePopup(): void {\n\t\tthis.onClose.emit();\n\t}\n\n}\n","import { TableActionModel } from './table-action.model';\n\nexport class TableActionArgument {\n\n\t// Constructor\n\tconstructor(\n\t\tpublic action: TableActionModel,\n\t\tpublic model: any\n\t) { }\n}\n","import { Component, Input, Output, EventEmitter, TemplateRef } from '@angular/core';\n\nimport { TableOptionsModel } from './table-options.model';\nimport { TableActionArgument } from './table-action.argument';\nimport { TableActionModel } from './table-action.model';\n\n@Component({\n\tselector: 'ngx-gustavguez-table',\n\ttemplateUrl: './ngx-gustavguez-table.component.html',\n\tstyleUrls: ['./ngx-gustavguez-table.component.scss']\n})\nexport class NgxGustavguezTableComponent {\n\t// Inputs\n\t@Input() options: TableOptionsModel;\n\t@Input() items: any[];\n\t@Input() customTdTpl: TemplateRef<any>;\n\n\t// Output\n\t@Output() onAction: EventEmitter<TableActionArgument> = new EventEmitter();\n\n\t// Custom events\n\tonActionClick(action: TableActionModel, model: any): void {\n\t\tthis.onAction.emit(\n\t\t\tnew TableActionArgument(action, model)\n\t\t);\n\t}\n}\n","export class StringUtility {\n\n\tstatic randomString(): string {\n\t\treturn Math.random().toString(36).substring(2, 12);\n\t}\n\n\tstatic padLeft(val: number, digits: number): string {\n\t\treturn val.toString().padStart(digits, '0');\n\t}\n}\n","import { StatusEnum } from '../../status.enum';\nimport { StringUtility } from '../../utilities/string.utility';\n\nexport class ToastModel {\n\tpublic id: string;\n\tpublic timerInstance: any;\n\n\tconstructor(\n\t\tpublic message: string,\n\t\tpublic status: StatusEnum\n\t) {\n\t\t// Generate random id\n\t\tthis.id = StringUtility.randomString();\n\t}\n}\n","import { Injectable, EventEmitter } from '@angular/core';\n\nimport { ToastModel } from './toast.model';\nimport { StatusEnum } from '../../status.enum';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class ToastsService {\n\n\t// Event emmiters\n\tpublic onToastAdded: EventEmitter<ToastModel> = new EventEmitter();\n\n\t// Methods\n\tpublic addError(message: string): void {\n\t\t// Open toast\n\t\tthis.onToastAdded.emit(\n\t\t\tnew ToastModel(message, StatusEnum.DANGER)\n\t\t);\n\t}\n\n\tpublic addSuccess(message: string): void {\n\t\t// Open toast\n\t\tthis.onToastAdded.emit(\n\t\t\tnew ToastModel(message, StatusEnum.SUCCESS)\n\t\t);\n\t}\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ToastModel } from './toast.model';\nimport { ToastsService } from './toasts.service';\nimport { ArrayUtility } from '../../utilities/array.utility';\n\n@Component({\n\tselector: 'ngx-gustavguez-toasts',\n\ttemplateUrl: './ngx-gustavguez-toasts.component.html',\n\tstyleUrls: ['./ngx-gustavguez-toasts.component.scss']\n})\nexport class NgxGustavguezToastsComponent implements OnInit {\n\t// Inputs\n\t@Input() brandTitle: string;\n\n\t// Models\n\ttoasts: ToastModel[] = [];\n\n\t// Inject services\n\tconstructor(\n\t\tprivate toastsService: ToastsService) { }\n\n\t// On component init\n\tngOnInit(): void {\n\t\t// Watch toast added\n\t\tthis.toastsService.onToastAdded.subscribe((toast: ToastModel) => {\n\t\t\tthis.openToast(toast);\n\t\t});\n\t}\n\n\t// Custom events\n\tonCloseToast(toast: ToastModel): void {\n\t\tthis.closeToast(toast);\n\t}\n\n\t// Private methods\n\tprivate openToast(toast: ToastModel): void {\n\t\t// Before push create timeout\n\t\ttoast.timerInstance = setTimeout(() => {\n\t\t\tthis.closeToast(toast);\n\t\t}, 3000);\n\n\t\t// push\n\t\tthis.toasts.unshift(toast);\n\t}\n\n\tprivate closeToast(toast: ToastModel): void {\n\t\t// Check\n\t\tif (toast instanceof ToastModel) {\n\t\t\tArrayUtility.find(this.toasts, toast.id, (toastFound: ToastModel, index: number) => {\n\t\t\t\t// Clear timer instance\n\t\t\t\tclearTimeout(toastFound.timerInstance);\n\n\t\t\t\t// Remove from array\n\t\t\t\tthis.toasts.splice(index, 1);\n\t\t\t});\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { NgxGustavguezButtonComponent } from './forms/ngx-gustavguez-button/ngx-gustavguez-button.component';\nimport { NgxGustavguezInputComponent } from './forms/ngx-gustavguez-input/ngx-gustavguez-input.component';\nimport { NgxGustavguezInputHolderComponent } from './forms/ngx-gustavguez-input-holder/ngx-gustavguez-input-holder.component';\nimport { NgxGustavguezSelectComponent } from './forms/ngx-gustavguez-select/ngx-gustavguez-select.component';\nimport { NgxGustavguezSubmitComponent } from './forms/ngx-gustavguez-submit/ngx-gustavguez-submit.component';\nimport { NgxGustavguezTagsComponent } from './forms/ngx-gustavguez-tags/ngx-gustavguez-tags.component';\nimport { NgxGustavguezTextareaComponent } from './forms/ngx-gustavguez-textarea/ngx-gustavguez-textarea.component';\nimport { NgxGustavguezMainContainerDirective } from './layout/ngx-gustavguez-main-container/ngx-gustavguez-main-container.directive';\nimport { NgxGustavguezMainSidebarComponent } from './layout/ngx-gustavguez-main-sidebar/ngx-gustavguez-main-sidebar.component';\nimport { NgxGustavguezNavComponent } from './layout/ngx-gustavguez-nav/ngx-gustavguez-nav.component';\nimport { NgxGustavguezNavItemComponent } from './layout/ngx-gustavguez-nav-item/ngx-gustavguez-nav-item.component';\nimport { NgxGustavguezPrettyDatePipe } from './pipes/ngx-gustavguez-pretty-date/ngx-gustavguez-pretty-date.pipe';\nimport { NgxGustavguezPrettyHourPipe } from './pipes/ngx-gustavguez-pretty-hour/ngx-gustavguez-pretty-hour.pipe';\nimport { NgxGustavguezPrettyNumberPipe } from './pipes/ngx-gustavguez-pretty-number/ngx-gustavguez-pretty-number.pipe';\nimport { NgxGustavguezCardComponent } from './structure/ngx-gustavguez-card/ngx-gustavguez-card.component';\nimport { NgxGustavguezInfoBoxComponent } from './structure/ngx-gustavguez-info-box/ngx-gustavguez-info-box.component';\nimport { NgxGustavguezLoaderComponent } from './structure/ngx-gustavguez-loader/ngx-gustavguez-loader.component';\nimport { NgxGustavguezPageHeaderComponent } from './structure/ngx-gustavguez-page-header/ngx-gustavguez-page-header.component';\nimport { NgxGustavguezPopupComponent } from './structure/ngx-gustavguez-popup/ngx-gustavguez-popup.component';\nimport { NgxGustavguezTableComponent } from './structure/ngx-gustavguez-table/ngx-gustavguez-table.component';\nimport { NgxGustavguezToastsComponent } from './structure/ngx-gustavguez-toasts/ngx-gustavguez-toasts.component';\n\n\n@NgModule({\n\tdeclarations: [\n\t\tNgxGustavguezButtonComponent,\n\t\tNgxGustavguezInputComponent,\n\t\tNgxGustavguezInputHolderComponent,\n\t\tNgxGustavguezSelectComponent,\n\t\tNgxGustavguezSubmitComponent,\n\t\tNgxGustavguezTagsComponent,\n\t\tNgxGustavguezTextareaComponent,\n\n\t\tNgxGustavguezMainContainerDirective,\n\t\tNgxGustavguezMainSidebarComponent,\n\t\tNgxGustavguezNavComponent,\n\t\tNgxGustavguezNavItemComponent,\n\n\t\tNgxGustavguezPrettyDatePipe,\n\t\tNgxGustavguezPrettyHourPipe,\n\t\tNgxGustavguezPrettyNumberPipe,\n\n\t\tNgxGustavguezCardComponent,\n\t\tNgxGustavguezInfoBoxComponent,\n\t\tNgxGustavguezLoaderComponent,\n\t\tNgxGustavguezPageHeaderComponent,\n\t\tNgxGustavguezPopupComponent,\n\t\tNgxGustavguezTableComponent,\n\t\tNgxGustavguezToastsComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule,\n\t\tReactiveFormsModule\n\t],\n\texports: [\n\t\tNgxGustavguezButtonComponent,\n\t\tNgxGustavguezInputComponent,\n\t\tNgxGustavguezInputHolderComponent,\n\t\tNgxGustavguezSelectComponent,\n\t\tNgxGustavguezSubmitComponent,\n\t\tNgxGustavguezTagsComponent,\n\t\tNgxGustavguezTextareaComponent,\n\n\t\tNgxGustavguezMainContainerDirective,\n\t\tNgxGustavguezMainSidebarComponent,\n\t\tNgxGustavguezNavComponent,\n\t\tNgxGustavguezNavItemComponent,\n\n\t\tNgxGustavguezPrettyDatePipe,\n\t\tNgxGustavguezPrettyHourPipe,\n\t\tNgxGustavguezPrettyNumberPipe,\n\n\t\tNgxGustavguezCardComponent,\n\t\tNgxGustavguezInfoBoxComponent,\n\t\tNgxGustavguezLoaderComponent,\n\t\tNgxGustavguezPageHeaderComponent,\n\t\tNgxGustavguezPopupComponent,\n\t\tNgxGustavguezTableComponent,\n\t\tNgxGustavguezToastsComponent\n\t]\n})\nexport class NgxGustavguezCoreModule { }\n","import { ApiResponseStrategyInterface } from './api-response-strategy.interface';\n\nexport class ApiRootResponseStrategyModel implements ApiResponseStrategyInterface{\n\n\tpublic getName(): string {\n\t\treturn 'root';\n\t}\n\n\tpublic parseJSON(json: any): any {\n\t\t// Init data\n\t\tlet data: any = null;\n\n\t\t// Check key data in json\n\t\tif (json) {\n\t\t\tdata = json;\n\t\t}\n\t\treturn data;\n\t}\n\n}\n","import { ApiResponseStrategyInterface } from './api-response-strategy.interface';\n\nexport class ApiDataResponseStrategyModel implements ApiResponseStrategyInterface{\n\n\tpublic getName(): string {\n\t\treturn 'data';\n\t}\n\n\tpublic parseJSON(json: any): any {\n\t\t// Init data\n\t\tlet data: any = null;\n\n\t\t// Check key data in json\n\t\tif (json && json.data) {\n\t\t\tdata = json.data;\n\t\t}\n\t\treturn data;\n\t}\n\n}\n","import { ArrayUtility } from '../utilities/array.utility';\n\nexport class ApiResponseModel {\n\n\tconstructor(\n\t\tpublic data?: any) { }\n\n\tpublic hasSingreResult(): boolean {\n\t\treturn this.data && this.data.id;\n\t}\n\n\tpublic hasCollectionResult(): boolean {\n\t\treturn ArrayUtility.hasValue(this.data);\n\t}\n}\n","import { FormGroup, FormControl } from '@angular/forms';\n\nexport class FormUtility {\n\n\t/**\n\t * Returns a form data object\n\t * @param json\n\t */\n\tstatic jsonToFormData(json: any): FormData {\n\t\tconst fd = new FormData();\n\n\t\tfor (const key in json) {\n\t\t\tif (json[key] instanceof Array) {\n\t\t\t\tjson[key].forEach((jsonChild: any, index: number) => {\n\t\t\t\t\tfd.append(key + '[' + index + ']', jsonChild);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tfd.append(key, json[key]);\n\t\t\t}\n\t\t}\n\t\treturn fd;\n\t}\n\n\t/**\n\t * Find an Blob or File object in json\n\t * @param json\n\t */\n\tstatic needFormData(json: any): boolean {\n\t\tlet need: boolean = false;\n\t\tfor (const key in json) {\n\t\t\tif (json[key] instanceof File || json[key] instanceof Blob) {\n\t\t\t\tneed = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn need;\n\t}\n\n\t/**\n\t * Trigger form validations\n\t * @param formGroup\n\t */\n\tstatic validateAllFormFields(formGroup: FormGroup): void {\n\t\tObject.keys(formGroup.controls).forEach((field: string) => {\n\t\t\tconst control = formGroup.get(field);\n\t\t\tif (control instanceof FormControl) {\n\t\t\t\tcontrol.markAsTouched({ onlySelf: true });\n\t\t\t} else if (control instanceof FormGroup) {\n\t\t\t\tthis.validateAllFormFields(control);\n\t\t\t}\n\t\t});\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { FormUtility } from '../utilities/form.utility';\nimport { ArrayUtility } from '../utilities/array.utility';\nimport { ApiResponseModel } from './api-response.model';\nimport { ApiResponseStrategyInterface } from './api-response-strategies/api-response-strategy.interface';\nimport { ApiDataResponseStrategyModel } from './api-response-strategies/api-data-response-strategy.model';\nimport { ApiRootResponseStrategyModel } from './api-response-strategies/api-root-response-strategy.model';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ApiService {\n\n\t// Models\n\tprivate apiURL: string;\n\tprivate accessToken: string;\n\tprivate previousApiResponseStrategy: ApiResponseStrategyInterface;\n\tprivate activeApiResponseStrategy: ApiResponseStrategyInterface;\n\tprivate apiResponseStrategies: ApiResponseStrategyInterface[];\n\n\t// Service constructor\n\tconstructor(\n\t\tprivate httpClient: HttpClient) {\n\t\t// Load data strategy by default\n\t\tthis.apiResponseStrategies = [\n\t\t\tnew ApiDataResponseStrategyModel(),\n\t\t\tnew ApiRootResponseStrategyModel()\n\t\t];\n\n\t\t// Set as active\n\t\tthis.activeApiResponseStrategy = this.apiResponseStrategies[0];\n\t}\n\n\t// Setters\n\tpublic setApiURL(apiURL: string): void {\n\t\tthis.apiURL = apiURL;\n\t}\n\n\tpublic setAccessToken(accessToken: string): void {\n\t\tthis.accessToken = accessToken;\n\t}\n\n\t// Add strategy method\n\tpublic addApiResponseStrategy(strategy: ApiResponseStrategyInterface): void {\n\t\tif (strategy.getName()) {\n\t\t\tthis.apiResponseStrategies.push(strategy);\n\t\t}\n\t}\n\n\t// Change active strategy\n\tpublic changeApiResponseStrategy(strategyName: string): boolean {\n\t\tlet hasChanged: boolean = false;\n\n\t\t// Check current are equal\n\t\tif (this.activeApiResponseStrategy.getName() === strategyName) {\n\t\t\treturn hasChanged;\n\t\t}\n\n\t\t// Find strategy\n\t\tArrayUtility.every(this.apiResponseStrategies, (strategy: ApiResponseStrategyInterface) => {\n\t\t\t// Check name\n\t\t\tif (strategy.getName() === strategyName) {\n\t\t\t\t// Save previous\n\t\t\t\tthis.previousApiResponseStrategy = this.activeApiResponseStrategy;\n\n\t\t\t\t// Load new stategy\n\t\t\t\tthis.activeApiResponseStrategy = strategy;\n\n\t\t\t\t// Mark has changed\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t\treturn !hasChanged;\n\t\t});\n\t\treturn hasChanged;\n\t}\n\n\t// Restore prev active stategy\n\tpublic restoreApiResponseStrategy(): void {\n\t\t// Check prev are not empty and is different\n\t\tif (this.previousApiResponseStrategy !== undefined\n\t\t\t&& this.previousApiResponseStrategy.getName() !== this.activeApiResponseStrategy.getName()) {\n\t\t\tthis.activeApiResponseStrategy = this.previousApiResponseStrategy;\n\t\t}\n\t}\n\n\t// Fetch\n\tpublic fetchData(uri: string, params?: any): Observable<ApiResponseModel> {\n\t\t// Check cache of observables\n\n\t\t// Get options\n\t\tconst httpOptions = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\tAuthorization: 'Bearer ' + this.accessToken\n\t\t\t}),\n\t\t\tparams: params\n\t\t};\n\n\t\t// Do request\n\t\treturn this.httpClient\n\t\t\t.get(this.apiURL + uri, httpOptions)\n\t\t\t.pipe(\n\t\t\t\t// Map response\n\t\t\t\tmap((response: any) => this.parseResponse(response))\n\t\t\t);\n\t}\n\n\t// Fetch\n\tpublic getObj(uri: string, id?: any): Observable<ApiResponseModel> {\n\t\t// Check cache of observables\n\n\t\t// Get options\n\t\tconst httpOptions = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\tAuthorization: 'Bearer ' + this.accessToken\n\t\t\t})\n\t\t};\n\n\t\t// Do request\n\t\treturn this.httpClient\n\t\t\t.get(this.apiURL + uri + (id ? '/' + id : ''), httpOptions)\n\t\t\t.pipe(\n\t\t\t\t// Map response\n\t\t\t\tmap((response: any) => this.parseResponse(response))\n\t\t\t);\n\t}\n\n\t// Update an object using PATCH\n\tpublic partialUpdateObj(uri: string, id: number, obj: any): Observable<ApiResponseModel> {\n\t\t// Post options\n\t\tconst httpOptions = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\tAuthorization: 'Bearer ' + this.accessToken\n\t\t\t})\n\t\t};\n\n\t\t// Url\n\t\tconst url: string = this.apiURL + uri + '/' + id;\n\n\t\t// Do request\n\t\treturn this.httpClient\n\t\t\t.patch(url, obj, httpOptions)\n\t\t\t.pipe(\n\t\t\t\t// Map response\n\t\t\t\tmap((response: any) => this.parseResponse(response))\n\t\t\t);\n\t}\n\n\t// Delete an object using DELETE\n\tpublic deleteObj(uri: string, id?: any): Observable<boolean> {\n\t\t// Post options\n\t\tconst httpOptions = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Authorization': 'Bearer ' + this.accessToken\n\t\t\t})\n\t\t};\n\n\t\t// Url\n\t\tconst url: string = this.apiURL + uri + (id ? '/' + id : '');\n\n\t\t// Do request\n\t\treturn this.httpClient\n\t\t\t.delete(url, httpOptions)\n\t\t\t.pipe(\n\t\t\t\t// Map response\n\t\t\t\tmap(() => true)\n\t\t\t);\n\t}\n\n\t// Create an object with POST\n\tpublic createObj(uri: string, obj: any): Observable<ApiResponseModel> {\n\t\t// Post options\n\t\tconst httpOptions = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\tAuthorization: 'Bearer ' + this.accessToken\n\t\t\t})\n\t\t};\n\n\t\t// Url\n\t\tconst url: string = this.apiURL + uri;\n\n\t\t// Check form data\n\t\tif (FormUtility.needFormData(obj)) {\n\t\t\tobj = FormUtility.jsonToFormData(obj);\n\t\t}\n\n\t\t// Do request\n\t\treturn this.httpClient\n\t\t\t.post(url, obj, httpOptions)\n\t\t\t.pipe(\n\t\t\t\t// Map response\n\t\t\t\tmap((response: any) => this.parseResponse(response))\n\t\t\t);\n\t}\n\n\t// Parse response\n\tprivate parseResponse(response: any): ApiResponseModel {\n\t\t// Current response\n\t\tconst resp: ApiResponseModel = new ApiResponseModel();\n\n\t\t// CHECK RESPONSE\n\t\tresp.data = this.activeApiResponseStrategy.parseJSON(response);\n\n\t\t// Return api response model\n\t\treturn resp;\n\t}\n\n}\n","export class WindowUtility {\n\n\tstatic isSmallScreen(): boolean {\n\t\treturn window.innerWidth < 768;\n\t}\n\n\tstatic isNotSmallScreen(): boolean {\n\t\treturn window.innerWidth >= 768;\n\t}\n}\n","import { StringUtility } from '../../utilities/string.utility';\nimport { ArrayUtility } from '../../utilities/array.utility';\n\nexport class NavItemModel {\n\n\tpublic id: string;\n\tpublic isLink: boolean;\n\n\tconstructor(\n\t\tpublic display?: string,\n\t\tpublic icon?: string,\n\t\tpublic action?: string,\n\t\tpublic childs?: NavItemModel[]\n\t) {\n\t\tthis.id = StringUtility.randomString();\n\t\tthis.isLink = !ArrayUtility.hasValue(childs);\n\t}\n}\n","export class TableHeaderModel {\n\t// Constructor\n\tconstructor(\n\t\tpublic display?: string) {\n\t}\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { StatusEnum } from '../../status.enum';\n\nexport class TableActionModel {\n\n\t// Models\n\tpublic btnClasses: string;\n\tpublic status: StatusEnum;\n\n\t// Constructor\n\tconstructor(\n\t\tpublic icon?: string,\n\t\tpublic text?: string,\n\t\tpublic mustDisplayCallback?: (model: any) => boolean) {\n\t\t// By default is primary\n\t\tthis.status = StatusEnum.PRIMARY;\n\t}\n\n\t// Abstract methods\n\tpublic mustDisplay(model: any): boolean {\n\t\treturn this.mustDisplayCallback instanceof Function ? this.mustDisplayCallback(model) : true;\n\t}\n}\n","import { TableActionModel } from '../table-action.model';\n\nexport class TableShowActionModel extends TableActionModel {\n\n\tconstructor(mustDisplayCallback?: (model: any) => boolean) {\n\t\t// Call parent constructor\n\t\tsuper('fas fa-search', 'Show model', mustDisplayCallback);\n\t}\n}\n","import { TableHeaderModel } from './table-header.model';\nimport { TableActionModel } from './table-action.model';\nimport { TableShowActionModel } from './actions/table-show-action.model';\n\nexport class TableOptionsModel {\n\n\t// Models\n\tpublic actions: TableActionModel[];\n\n\t// Contructor\n\tconstructor(\n\t\tpublic headers: TableHeaderModel[],\n\t\tpublic fields: string[]\n\t) {\n\t\t// Default actions\n\t\tthis.actions = [new TableShowActionModel()];\n\t}\n}\n"]}