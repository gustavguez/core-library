import * as momentImported from 'moment';
const moment = momentImported;
export class DateUtility {
    static todayLocaleString() {
        const today = moment();
        return DateUtility.localeString(today);
    }
    static todayDateString() {
        const today = moment();
        return today.format('YYYY-MM-DD');
    }
    static localeString(date) {
        return date.format('YYYY-MM-DD') + 'T' + date.format('HH:mm');
    }
    static todayAsPrettyString() {
        const today = moment();
        return today.format('DD/MM/YYYY');
    }
    static prettyDate(date, displayHour) {
        const momentDate = moment(date);
        let str = momentDate.format('DD/MM/YYYY');
        if (displayHour) {
            str += ' ' + DateUtility.prettyHour(date);
        }
        return str;
    }
    static prettyHour(date) {
        const momentDate = moment(date);
        return momentDate.format('HH:mm');
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS51dGlsaXR5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZ3VzdGF2Z3Vlei9uZ3gtY29yZS9zcmMvbGliL3V0aWxpdGllcy9kYXRlLnV0aWxpdHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLGNBQWMsTUFBTSxRQUFRLENBQUM7QUFFekMsTUFBTSxNQUFNLEdBQUcsY0FBYyxDQUFDO0FBRTlCLE1BQU0sT0FBTyxXQUFXO0lBRXZCLE1BQU0sQ0FBQyxpQkFBaUI7UUFDdkIsTUFBTSxLQUFLLEdBQVEsTUFBTSxFQUFFLENBQUM7UUFDNUIsT0FBTyxXQUFXLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxNQUFNLENBQUMsZUFBZTtRQUNyQixNQUFNLEtBQUssR0FBUSxNQUFNLEVBQUUsQ0FBQztRQUM1QixPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVELE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBUztRQUM1QixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDL0QsQ0FBQztJQUVELE1BQU0sQ0FBQyxtQkFBbUI7UUFDekIsTUFBTSxLQUFLLEdBQVEsTUFBTSxFQUFFLENBQUM7UUFDNUIsT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRCxNQUFNLENBQUMsVUFBVSxDQUFDLElBQVksRUFBRSxXQUFxQjtRQUNwRCxNQUFNLFVBQVUsR0FBUSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDckMsSUFBSSxHQUFHLEdBQVcsVUFBVSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUVsRCxJQUFJLFdBQVcsRUFBRTtZQUNoQixHQUFHLElBQUksR0FBRyxHQUFHLFdBQVcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDMUM7UUFDRCxPQUFPLEdBQUcsQ0FBQztJQUNaLENBQUM7SUFFRCxNQUFNLENBQUMsVUFBVSxDQUFDLElBQVk7UUFDN0IsTUFBTSxVQUFVLEdBQVEsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3JDLE9BQU8sVUFBVSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNuQyxDQUFDO0NBRUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBtb21lbnRJbXBvcnRlZCBmcm9tICdtb21lbnQnO1xuXG5jb25zdCBtb21lbnQgPSBtb21lbnRJbXBvcnRlZDtcblxuZXhwb3J0IGNsYXNzIERhdGVVdGlsaXR5IHtcblxuXHRzdGF0aWMgdG9kYXlMb2NhbGVTdHJpbmcoKTogc3RyaW5nIHtcblx0XHRjb25zdCB0b2RheTogYW55ID0gbW9tZW50KCk7XG5cdFx0cmV0dXJuIERhdGVVdGlsaXR5LmxvY2FsZVN0cmluZyh0b2RheSk7XG5cdH1cblxuXHRzdGF0aWMgdG9kYXlEYXRlU3RyaW5nKCk6IHN0cmluZyB7XG5cdFx0Y29uc3QgdG9kYXk6IGFueSA9IG1vbWVudCgpO1xuXHRcdHJldHVybiB0b2RheS5mb3JtYXQoJ1lZWVktTU0tREQnKTtcblx0fVxuXG5cdHN0YXRpYyBsb2NhbGVTdHJpbmcoZGF0ZTogYW55KTogc3RyaW5nIHtcblx0XHRyZXR1cm4gZGF0ZS5mb3JtYXQoJ1lZWVktTU0tREQnKSArICdUJyArIGRhdGUuZm9ybWF0KCdISDptbScpO1xuXHR9XG5cblx0c3RhdGljIHRvZGF5QXNQcmV0dHlTdHJpbmcoKTogc3RyaW5nIHtcblx0XHRjb25zdCB0b2RheTogYW55ID0gbW9tZW50KCk7XG5cdFx0cmV0dXJuIHRvZGF5LmZvcm1hdCgnREQvTU0vWVlZWScpO1xuXHR9XG5cblx0c3RhdGljIHByZXR0eURhdGUoZGF0ZTogc3RyaW5nLCBkaXNwbGF5SG91cj86IGJvb2xlYW4pOiBzdHJpbmcge1xuXHRcdGNvbnN0IG1vbWVudERhdGU6IGFueSA9IG1vbWVudChkYXRlKTtcblx0XHRsZXQgc3RyOiBzdHJpbmcgPSBtb21lbnREYXRlLmZvcm1hdCgnREQvTU0vWVlZWScpO1xuXG5cdFx0aWYgKGRpc3BsYXlIb3VyKSB7XG5cdFx0XHRzdHIgKz0gJyAnICsgRGF0ZVV0aWxpdHkucHJldHR5SG91cihkYXRlKTtcblx0XHR9XG5cdFx0cmV0dXJuIHN0cjtcblx0fVxuXG5cdHN0YXRpYyBwcmV0dHlIb3VyKGRhdGU6IHN0cmluZyk6IHN0cmluZyB7XG5cdFx0Y29uc3QgbW9tZW50RGF0ZTogYW55ID0gbW9tZW50KGRhdGUpO1xuXHRcdHJldHVybiBtb21lbnREYXRlLmZvcm1hdCgnSEg6bW0nKTtcblx0fVxuXG59XG4iXX0=